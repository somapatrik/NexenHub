@model NexenHub.Models.MachineUsedMat

<div class="card">
    <div class="card-header bg-dark text-light">
        Used material
    </div>
    <div class="card-body flex-fill">
        <div id="@Html.Raw(Model.UniqeName)_Vis" />
    </div>
</div>

<style>
    .vis-item.vis-background.workorder {
        background-color: rgba(245, 198, 203, .5);
    }
</style>

<script type="text/javascript">

    var @Html.Raw(Model.UniqeName + "items") = new vis.DataSet([
        @{
            int i = 0;
            foreach (var item in Model.visItems)
            {
                @Html.Raw("{id:'" + item.id + "', content:'" + item.content + "',start:'"+item.startS+"',end:'"+item.endS+"',group:'"+item.group+"'}");
                i++;
                if (i < Model.visItems.Count || ( i == Model.visItems.Count && Model.visBackground.Count > 0) )
                    @Html.Raw(",");
            }

            int k = 0;
            foreach (var item in Model.visBackground)
            {
                @Html.Raw("{id:'" + item.id + "', content:'" + item.content + "',start:'"+item.startS+"',end:'"+item.endS+ "',type: 'background', className: 'workorder'}");
                k++;
                if (k < Model.visBackground.Count)
                    @Html.Raw(",");
            }
        }

    ]);

    var @Html.Raw(Model.UniqeName + "grp") = new vis.DataSet([
        { id:'0', content: 'Workorder' },
        @{
            int j = 0;
            foreach (var grp in Model.visGroups)
            {
                @Html.Raw("{id: '"+grp.id+"', content: '"+grp.content+"'}");
                j++;
                if (j < Model.visGroups.Count())
                    @Html.Raw(",");
            }
        }
    ]);

    var container = document.getElementById("@Html.Raw(Model.UniqeName)_Vis");

    var @Html.Raw(Model.UniqeName + "opt") = {
                start: "@Model.endFilterDate.AddHours(-3).ToString("yyyy-MM-ddTHH:mm:ss")",
                end: "@Model.endFilterDate.ToString("yyyy-MM-ddTHH:mm:ss")",
                editable:false
                };

    var timeline = new vis.Timeline(container);
    timeline.setOptions(@Html.Raw(Model.UniqeName + "opt"));
    timeline.setGroups(@Html.Raw(Model.UniqeName + "grp"));
    timeline.setItems(@Html.Raw(Model.UniqeName + "items"));

</script>

