@page
@using NexenHub.Class;
@model NexenHub.Pages.Cockpit.tbmModel
@{
    Layout = "_LayoutSide";
}

<div class="container-fluid">

    <div class="row my-3">

        <div class="col">
            <h4>Nexen 1</h4>
        </div>

    </div>

    <div class="row row-cols-1 row-col-md-3 row-cols-xl-6">

        @foreach(MachineBasicInfo machine in Model.Phase1)
        {
            <div class="col">

                <div id="@Html.Raw(machine.EQ_ID + "_downTimeFrame")" class="row p-3 text-center">
                    <h5 id="@Html.Raw(machine.EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h5>
                </div>

                <div class="row bg-white text-dark p-2 text-center">
                    <h5><a href="~/cockpit/machine/@machine.EQ_ID">@machine.Name</a></h5>
                    <div class="text-muted">@machine.WC_ID / @machine.PROC_ID / @machine.EQ_ID</div>
                    </div>

            </div>
        }

    </div>

    <div class="row my-3 p-1">

        <div class="col">
            <h4>Nexen 2</h4>
        </div>

    </div>

    <div class="row row-cols-1 row-col-md-3 row-cols-xl-6">

        @foreach(MachineBasicInfo machine in Model.Phase2)
        {
            <div class="col">

                <div id="@Html.Raw(machine.EQ_ID + "_downTimeFrame")" class="row p-3 text-center">
                    <h5 id="@Html.Raw(machine.EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h5>
                </div>

                <div class="row bg-white text-dark p-2 text-center">
                    <h5><a href="~/cockpit/machine/@machine.EQ_ID" class="link">@machine.Name</a></h5>
                    <div class="text-muted">@machine.WC_ID / @machine.PROC_ID / @machine.EQ_ID</div>
                    </div>

            </div>
        }

    </div>

</div>


<script type="text/javascript">

    document.addEventListener('readystatechange', event => {
        switch (document.readyState) {
            case "loading":
                break;
            case "interactive":
                refreshTBM();
                break;
            case "complete":
                setInterval(refreshTBM, 60000);
                break;
        }
    });

    async function refreshTBM()
    {
        @foreach(MachineBasicInfo machine in Model.Phase1)
        {
            @Html.Raw("TBMmachineDowntime('" + machine.EQ_ID + "');");
        }

         @foreach(MachineBasicInfo machine in Model.Phase2)
        {
            @Html.Raw("TBMmachineDowntime('" + machine.EQ_ID + "');");
        }
    }

    async function TBMmachineDowntime(eqid) {
        return await fetch(window.location.origin + '/api/prod/actDowntime/' + eqid)
            .then(response => response.json())
            .then(data => {
                var msg = 'Fine';
                var msgStyle = 'bg-github-green';
                var msgcolor = 'text-white';

                var msgElement = document.getElementById(eqid + '_downTimeMsg');
                var frameElement = document.getElementById(eqid + '_downTimeFrame');

                frameElement.classList.remove('bg-github-green', 'bg-warning', 'bg-github-red');
                msgElement.classList.remove('text-white', 'text-black');

                if (data['Code'] != '') {
                    msg = data['Description'];
                    if (data['Code'] == 'N016') {
                        msgStyle = 'bg-warning';
                        msgcolor = 'text-black';
                    }
                    else {
                        msgStyle = 'bg-github-red';
                    }
                }

                msgElement.innerHTML = msg;
                frameElement.classList.add(msgStyle);
                msgElement.classList.add(msgcolor);
            });
    }

</script>