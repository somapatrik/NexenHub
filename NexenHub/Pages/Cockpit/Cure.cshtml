@page
@using NexenHub.Class;
@model NexenHub.Pages.Cockpit.CureModel
@{
    Layout = "_LayoutSide";
}

<div class="container">



    @*A*@
    <div class="row mb-2">

        <div class="d-flex w-100" style="height:50px;">

            <div class="d-flex align-items-center justify-content-center h-100 w-100 m-1">

                <div>
                    <h3>A</h3>
                </div>

             </div>

                @for (int i = 0; i < 20; i++)
                {
                    <div id="@Html.Raw(Model.Phase1[i].EQ_ID + "_downTimeFrame")" class="cureCube nothing m-1"></div>
                }

            
        </div>
</div>

@*B*@
    <div class="row mb-2">

        <div class="d-flex w-100" style="height:50px;">

            <div class="d-flex align-items-center justify-content-center h-100 w-100 m-1">

                <div>
                    <h3>B</h3>
                </div>

                </div>

                @for (int i = 20; i < 40; i++)
                {
                    <div id="@Html.Raw(Model.Phase1[i].EQ_ID + "_downTimeFrame")" class="cureCube nothing m-1"></div>
                }


        </div>
</div>

@*C*@
    <div class="row mb-2">

        <div class="d-flex w-100" style="height:50px;">

            <div class="d-flex align-items-center justify-content-center h-100 w-100 m-1">

                <div>
                    <h3>C</h3>
                </div>

                </div>

                @for (int i = 40; i < 60; i++)
                {
                    <div id="@Html.Raw(Model.Phase1[i].EQ_ID + "_downTimeFrame")" class="cureCube nothing m-1"></div>
                }


        </div>
</div>

@*D*@
    <div class="row">

        <div class="d-flex w-100" style="height:50px;">

            <div class="d-flex align-items-center justify-content-center h-100 w-100 m-1">

                <div>
                    <h3>D</h3>
                </div>

                </div>

                @for (int i = 60; i < 80; i++)
                {
                    <div id="@Html.Raw(Model.Phase1[i].EQ_ID + "_downTimeFrame")" class="cureCube nothing m-1"></div>
                }


        </div>
</div>


</div>

<script type="text/javascript">
                
    document.addEventListener('readystatechange', event => {
        switch (document.readyState) {
            case "loading":
                break;
            case "interactive":
                refreshCure();
                break;
            case "complete":
                setInterval(refreshCure, 10000);
                break;
        }
    });

    async function refreshCure()
    {

        @foreach(MachineBasicInfo machine in Model.Phase1)
        {
            @Html.Raw("await CuremachineDowntime('" + machine.EQ_ID + "');");
        }

        @foreach (MachineBasicInfo machine in Model.Phase2)
        {
            @Html.Raw("await CuremachineDowntime('" + machine.EQ_ID + "');");
        }

    }

    async function CuremachineDowntime(eqid) {
        return await fetch(window.location.origin + '/api/prod/actDowntime/' + eqid)
            .then(response => response.json())
            .then(data => {

                var frameElement = document.getElementById(eqid + '_downTimeFrame');

                frameElement.classList.remove('nothing','fine', 'warning', 'danger');

                if (data['Code'] != '') {
                    msg = data['Description'];
                    if (data['Code'] == 'N016') 
                    {
                        msgStyle = 'warning';
                    }
                    else {
                        msgStyle = 'danger';
                    }
                }
                    
                frameElement.classList.add(msgStyle);
            });
    }

</script>