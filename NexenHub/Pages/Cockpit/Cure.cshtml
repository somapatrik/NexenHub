@page
@using NexenHub.Class;
@model NexenHub.Pages.Cockpit.CureModel
@{
    Layout = "_LayoutSide";
}

<div class="row row-cols rows-cols-xl-8 g-1">

    <div class="col">

            <table class="table table-sm table-borderless table-hover">
                
                @for (int a = 0; a < 20; a++)
                {
                <tr id="@Html.Raw(Model.Phase1[a].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[a].EQ_ID" class="link-dark">A#@(a + 1)</a></h6>
                    </td>
                    <td  class="text-center">
                      <h6 id="@Html.Raw(Model.Phase1[a].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }
                
            </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int b = 20; b < 40; b++)
            {
                <tr id="@Html.Raw(Model.Phase1[b].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[b].EQ_ID" class="link-dark">B#@((b + 1)-20)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase1[b].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int c = 40; c < 60; c++)
            {
                <tr id="@Html.Raw(Model.Phase1[c].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[c].EQ_ID" class="link-dark">C#@((c + 1)-40)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase1[c].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int d = 60; d < 80; d++)
            {
                <tr id="@Html.Raw(Model.Phase1[d].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[d].EQ_ID" class="link-dark">D#@((d + 1)-60)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase1[d].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int e = 0; e < 20; e++)
            {
                <tr id="@Html.Raw(Model.Phase2[e].EQ_ID + "_downTimeFrame")">

                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[e].EQ_ID" class="link-dark">E#@(e + 1)</a></h6>
                    </td>

                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase2[e].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>

                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int f = 20; f < 40; f++)
            {
                <tr id="@Html.Raw(Model.Phase2[f].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase2[f].EQ_ID" class="link-dark">F#@((f + 1) - 20)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase2[f].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int h = 40; h < 60; h++)
            {
                <tr id="@Html.Raw(Model.Phase2[h].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[h].EQ_ID" class="link-dark">H#@((h + 1) - 40)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase2[h].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

    <div class="col">

        <table class="table table-sm table-borderless table-hover">

            @for (int i = 60; i < 80; i++)
            {
                <tr id="@Html.Raw(Model.Phase2[i].EQ_ID + "_downTimeFrame")">
                    <td class="text-center">
                        <h6><a href="~/cockpit/machine/@Model.Phase1[i].EQ_ID" class="link-dark">I#@((i + 1) - 60)</a></h6>
                    </td>
                    <td class="text-center">
                        <h6 id="@Html.Raw(Model.Phase2[i].EQ_ID + "_downTimeMsg")" class="text-uppercase text-truncate"></h6>
                    </td>
                </tr>
            }

        </table>
    </div>

</div>

<script type="text/javascript">
                
    document.addEventListener('readystatechange', event => {
        switch (document.readyState) {
            case "loading":
                break;
            case "interactive":
                refreshCure();
                break;
            case "complete":
                setInterval(refreshCure, 10000);
                break;
        }
    });
            


    async function refreshCure()
    {

        @foreach(MachineBasicInfo machine in Model.Phase1)
        {
            @Html.Raw("CuremachineDowntime('" + machine.EQ_ID + "');");
        }

        @foreach (MachineBasicInfo machine in Model.Phase2)
        {
            @Html.Raw("CuremachineDowntime('" + machine.EQ_ID + "');");
        }

    }

    async function CuremachineDowntime(eqid) {
        return await fetch(window.location.origin + '/api/prod/actDowntime/' + eqid)
            .then(response => response.json())
            .then(data => {
                var msg = '';
                var msgStyle = 'table-primary';
                var msgcolor = 'text-dark';

                var msgElement = document.getElementById(eqid + '_downTimeMsg');
                var frameElement = document.getElementById(eqid + '_downTimeFrame');

                frameElement.classList.remove('table-primary', 'table-warning', 'table-danger');
                msgElement.classList.remove('text-white', 'text-dark');

                if (data['Code'] != '') {
                    msg = data['Description'];
                    if (data['Code'] == 'N016') {
                        msgStyle = 'table-warning';
                        msgcolor = 'text-dark';
                    }
                    else {
                        msgStyle = 'table-danger';
                    }
                }

                msgElement.innerHTML = msg;
                frameElement.classList.add(msgStyle);
                msgElement.classList.add(msgcolor);
            });
    }

</script>