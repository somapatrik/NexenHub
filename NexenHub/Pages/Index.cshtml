@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="container">

    <div class="row g-3">

        <div class="col-12">

            <div class="card bg-soma-darklight text-light">

                <div class="card-body">

                    <div class="row mb-3">

                        <div class="col-12 col-md">
                            <div class="card bg-soma-darklight border-secondary">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Minimum GT</h5>
                                    <h4 class="card-title">@Model.MinGt</h4>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-md">
                            <div class="card bg-soma-darklight border-secondary">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Average GT</h5>
                                    <h4 class="card-title">@Model.AvgGt</h4>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-md">
                            <div class="card bg-soma-darklight border-secondary">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Maximum GT</h5>
                                    <h4 class="card-title">@Model.MaxGt</h4>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <canvas id="myChart" />
                    </div>

                    <form method="post">
                        <nav>
                            <ul class="pagination pagination-dark justify-content-center">
                                @{ for (int i = 1; i < 13; i++)
                                    {
                                        if (Model.SelectedMonth == i)
                                        {
                                            <li class="page-item active"><button class="page-link" asp-page-handler="filter" asp-route-id="@i">@i</button></li>

                                        }
                                        else
                                        {
                                            <li class="page-item"><button class="page-link bg-dark text-light border-secondary" asp-page-handler="filter" asp-route-id="@i">@i</button></li>
                                        }
                                    }
                                }
                            </ul>
                        </nav>
                    </form>

                </div>
                <div class="card-footer">
                    <span type="button" data-bs-toggle="modal" data-bs-target="#jandiModal">Show Jandi report</span>
                </div>
            </div>

        </div>

    </div>

</div>

<div class="modal fade" id="jandiModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content  bg-secondary text-light">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Model.JandiTitle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.Raw(Model.JandiMsg)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    function drawTheChart() {
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Model.DaysInMonth),
                datasets: [
                    {
                        label: 'Daily goal',
                        data: @Html.Raw(Model.GoalDay),
                        backgroundColor: ['orange'],
                        borderColor: ['orange'],
                        borderWidth: 1,
                        type: 'line'
                    },
                    {
                        label: 'GreenTire',
                        data: @Html.Raw(Model.GTDays),
                        backgroundColor: ['rgba(75, 192, 192, 0.7)'],
                        borderColor: ['rgba(75, 192, 192, 1)'],
                        borderWidth: 1
                    },
                    {
                        label: 'Finished Tire',
                        data: @Html.Raw(Model.TireDays),
                        backgroundColor: ['rgba(54, 162, 235, 0.7)'],
                        borderColor: ['rgba(54, 162, 235, 1)'],
                        borderWidth: 1
                    }
                ]
            },
            options: {
                maintainAspectRatio: false,
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(255,255, 255,0.1)'
                        },
                        ticks: {
                            color: 'white'
                        }
                    },
                    x: {
                        grid: {
                            color: 'rgba(255,255, 255,0.1)'
                        },
                        ticks: {
                            color: 'white'
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                        labels: {
                            color: 'white'
                        }
                    }
                }
            }
        });
    }

    document.addEventListener("DOMContentLoaded", drawTheChart());

</script>


