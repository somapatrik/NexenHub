@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="container">
      <div class="row">

            <div class="col-12 col-md-6 col-lg-4 col-xl-4 mb-3">
                <div class="card">
                    <div class="card-header text-white bg-secondary">
                        Minimum GT
                    </div>
                    <div class="card-body text-center">
                        <h3 class="card-title">@Model.MinGt</h3>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-4 col-xl-4 mb-3">
                <div class="card">
                    <div class="card-header text-white bg-secondary">
                        Maximum GT
                    </div>
                    <div class="card-body text-center">
                        <h3 class="card-title">@Model.MaxGt</h3>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-4 col-xl-4 mb-3">
                <div class="card">
                    <div class="card-header text-white bg-secondary">
                        Average GT
                    </div>
                    <div class="card-body text-center">
                        <h3 class="card-title">@Model.AvgGt</h3>
                    </div>
                </div>
            </div>

    </div>

    <div class="row">
        <div class="col">

            <div class="card mb-3">
                <div class="card-header text-white bg-secondary">
                    Monthly report
                </div>
                <div class="card-body">
                    <canvas id="myChart" />
                </div>
            </div>
                    <form method="post">
                        <nav>
                            <ul class="pagination justify-content-center">
                                @{ for (int i=1; i < 13;i++)
                                   {
                                     if (Model.SelectedMonth == i)
                                     {
                                        <li class="page-item active"><button class="page-link" asp-page-handler="filter" asp-route-id="@i">@i</button></li>  
                                     }
                                     else
                                     {
                                        <li class="page-item"><button class="page-link" asp-page-handler="filter" asp-route-id="@i">@i</button></li>
                                     }
                                   }
                                }
                            </ul>
                        </nav>
                    </form>
        
        </div>
    </div>
    @*<div class="row">
        <div class="col">
            <div id="visualization"/>
        </div>
    </div>*@
</div>

<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Model.DaysInMonth),
            datasets: [
                {
                label: 'GreenTire',
                data: @Html.Raw(Model.GTDays),
                backgroundColor: ['rgba(50, 205, 50, 0.2)'],
                borderColor: ['rgba(50, 205, 50, 1)'],
                borderWidth: 1
                },
                {
                label: 'Finished Tire',
                data: @Html.Raw(Model.TireDays),
                backgroundColor: ['rgba(54, 162, 235, 0.2)'],
                borderColor: ['rgba(54, 162, 235, 1)'],
                borderWidth: 1
                },
                {
                label: 'Daily goal',
                data: @Html.Raw(Model.GoalDay),
                    backgroundColor: ['rgba(255, 140, 0, 0.2)'],
                    borderColor: ['rgba(255, 140, 0, 1)'],
                borderWidth: 1,
                type:'line'
                }
            ]
        },
        options: {
            elements: {
                point: {
                    radius: 0
                }
            },
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });


    //// DOM element where the Timeline will be attached
    //var container = document.getElementById('visualization');

    //// Create a DataSet (allows two way data-binding)
    //var items = new vis.DataSet([
    //    { id: 1, content: 'item 1', start: '2013-04-20' },
    //    { id: 2, content: 'item 2', start: '2013-04-14' },
    //    { id: 3, content: 'item 3', start: '2013-04-18' },
    //    { id: 4, content: 'item 4', start: '2013-04-16', end: '2013-04-19' },
    //    { id: 5, content: 'item 5', start: '2013-04-25' },
    //    { id: 6, content: 'item 6', start: '2013-04-27' }
    //]);

    //// Configuration for the Timeline
    //var options = {};

    //// Create a Timeline
    //var timeline = new vis.Timeline(container, items, options);


</script>


